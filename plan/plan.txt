my behavior tree implementation to fill in gaps and issues I found with other implementations

Notes:
-keep all export variables public in case users wish to access from other scripts
-if a node emits an editor warning in _get_configuration_warnings, don't repeat the warning at run time somewhere else
-avoid asserting, prefer throwing warnings and accounting for errors instead of crashing
-allow user to add non BT nodes under a branch, and just ignore them
-mark major and minor versions with tags

Resources:
https://nodecanvas.paradoxnotion.com/documentation/?section=bt-nodes-reference
https://www.gamedeveloper.com/programming/behavior-trees-for-ai-how-they-work
https://github.com/bitbrain/beehave
https://github.com/draghan/behavior_tree
https://dev.epicgames.com/documentation/en-us/unreal-engine/behavior-tree-in-unreal-engine---quick-start-guide?application_version=5.2
https://www.behaviortree.dev/docs/
https://www.gameaipro.com/GameAIPro/GameAIPro_Chapter06_The_Behavior_Tree_Starter_Kit.pdf

Stage 2 (v1.0):
[X] make into plugin

document exports and short descrption for each node (also rename and categorize exports)

[] follow official style guide so it's easier for others to contribute
https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_styleguide.html#doc-gdscript-styleguide

nodes:
-reactive sequence & selector
[X]-simple parallel
[X]-rename throttle into cooldown
-event listener that can interrupt low priority branches

additional nodes (in their own "extra" folder so we don't bloat the main folder):
-play animation (optional wait for finish)
-play sound (optional wait for finish)
-agent look at (2d/3d)
-play particles (optional wait for finish)
-instantiate object (pos, rot, scale)

plugin for visualizing tree graph and monitors at run-time,
support placing breakpoints on a specific node in the graph
use node name and editor description for the graph

unit tests:
-all node types and their expected behavior
-blackboard
-conditional aborts
-forcing a path from any node to any other
-pausing/unpausing
-changing tree nodes at run-time
-practical example

[X]support sub-trees and shared/multiple blackboards

[-] dynamic tree, support run-time modifications

[] better caching and navigating of tree

Stage 3:
documentations
examples (use my space game as example)

icons
asset lib setup

Future:
make into C++ module
translation
multiplayer support